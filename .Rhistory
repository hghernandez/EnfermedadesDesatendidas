summarise(poblacion= sum(poblacion)) %>%
as.data.frame()
pob_deptos <- pob_caba %>%
bind_rows(pob_sin_caba)
fix_cod <- function(x){
x <- ifelse(stringr::str_length(x)== 1,paste0('00',x),
ifelse(stringr::str_length(x)== 2,paste0('0',x),as.character(x)))
return(x)
}
pob_deptos <- pob_deptos %>%
mutate(coddep= fix_cod(coddep),
codprov= ifelse(codprov < 10,paste0('0',codprov),codprov))
#Uno los casos y la poblacion estimada
names(casos)
names(pob_deptos)
chagas <- pob_deptos %>%
filter(ano >= 2004 & ano <= 2018) %>%
left_join(ntd, by= c("ano","codprov"="provres","coddep"="depres","sexo","gredad"="edadquinq")) %>%
mutate(link= paste0(codprov,coddep)) %>%
fill(enf_desa_sub,.direction = "downup") %>%
fill(enf_desa_tot,.direction = "downup")
chagas
#Seteo los valroes NULL a 0
chagas[is.na(chagas)] <- 0
std = ntd %>%
filter(gredad != '18.Total')%>%
group_by(enf_desa_sub,sexo,gredad) %>%
summarise(casos=sum(casos),
poblacion=sum(poblacion)) %>%
mutate(order= as.numeric(substring(gredad,1,2))) %>%
arrange(sexo,order)
std =chagas %>%
filter(gredad != '18.Total')%>%
group_by(enf_desa_sub,sexo,gredad) %>%
summarise(casos=sum(casos),
poblacion=sum(poblacion)) %>%
mutate(order= as.numeric(substring(gredad,1,2))) %>%
arrange(sexo,order)
chagas_casos <- ntd %>%
filter(gredad != '18.Total')%>%
group_by(link,enf_desa_sub,sexo,gredad) %>%
summarise(casos=sum(casos),
poblacion=sum(poblacion)) %>%
mutate(order= as.numeric(substring(gredad,1,2))) %>%
arrange(link,sexo,order)
chagas_casos <- chagas %>%
filter(gredad != '18.Total')%>%
group_by(link,enf_desa_sub,sexo,gredad) %>%
summarise(casos=sum(casos),
poblacion=sum(poblacion)) %>%
mutate(order= as.numeric(substring(gredad,1,2))) %>%
arrange(link,sexo,order)
tasas_chagas <- list()
for(i in 1:1536){
for(j in 1:3){
tasas_chagas[[i]] <- ageadjust.indirect(count = chagas_casos[(1+17*(i-1)):(17+17*(i-1)),5],
pop= chagas_casos[(1+17*(i-1)):(17+17*(i-1)),6],
stdcount = std[(1+17*(j-1)):(17+17*(j-1)),4],
stdpop= std[(1+17*(j-1)):(17+17*(j-1)),5],
stdrate = std[(1+17*(j-1)):(17+17*(j-1)),4]/std[(1+17*(j-1)):(17+17*(j-1)),5])
}
print(i)
}
tasas_chagas_df <- as.data.frame(1:1536)
tasas_chagas_df$observados <- 0
tasas_chagas_df$esperados <- 0
tasas_chagas_df$RME <- 0
tasas_chagas_df$ic_inf <- 0
tasas_chagas_df$ic_sup <- 0
for(i in 1:1536){
tasas_chagas_df[i,]$observados <- tasas_chagas[[i]]$sir[1]
tasas_chagas_df[i,]$esperados <- tasas_chagas[[i]]$sir[2]
tasas_chagas_df[i,]$RME <- tasas_chagas[[i]]$sir[3]*100
tasas_chagas_df[i,]$ic_inf <- tasas_chagas[[i]]$sir[4]*100
tasas_chagas_df[i,]$ic_sup <- tasas_chagas[[i]]$sir[5]*100
print(i)
}
s <- unique(chagas_casos$sexo)
tasas_chagas_df$sexo <- rep(s,512)
l <- unique(chagas_casos$link)
tasas_chagas_df$link <- rep(l,each= 3)
tasas_chagas_df[,1] <- "Chagas"
colnames(tasas_chagas_df)[1] <- 'Evento'
save(tasas_chagas_df,file="tasas/tasas_chagas.RData")
tasas_chagas_df <- tasas_chagas_df %>%
filter(!link %in% c(94028,94021))
matriz <- read.gal("matriz de vecindad/matriz")
sexo = unique(tasas_chagas_df$sexo)
sexo = unique(tasas_chagas_df$sexo)
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,9] <- EBlocal(tasas_chagas_df$observados[tasas_chagas_df$sexo== sexo],
tasas_chagas_df$esperados[tasas_chagas_df$sexo== sexo],
matriz)$est*100
print(sexo)
}
sexo
sexo = unique(tasas_chagas_df$sexo)
sexo
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,9] <- EBlocal(tasas_chagas_df$observados[tasas_chagas_df$sexo== sexo],
tasas_chagas_df$esperados[tasas_chagas_df$sexo== sexo],
matriz)$est*100
print(sexo)
}
sexo = unique(tasas_chagas_df$sexo)
tasas_chagas_df
tasas_chagas_df$sexo== sexo
load("tasas/tasas_chagas.RData")
View(tasas_chagas_df)
library(tidyverse)
library(R.utils)
library(foreign)
library(sf)
library(epitools)
library(spdep)
load("datosMort/data.RData")
##%######################################################%##
#                                                          #
####             Genero un dataset para NTD             ####
#                                                          #
##%######################################################%##
chagas <- casos %>%
filter(grepl("Chagas",enf_desa_sub))
##%######################################################%##
#                                                          #
####               Poblaciones estimadas                ####
#                                                          #
##%######################################################%##
pob_deptos <- loadObject("PoblacionesEstimadas/pobdeptos0125.Rbin")
#Armo la poblacion para todo CABA
pob_caba <- pob_deptos %>%
filter(codprov== 2) %>%
group_by(ano,codprov,sexo,gredad) %>%
summarise(poblacion= sum(poblacion))%>%
mutate(coddep= 000,
nomdep= 'Total CABA') %>%
as.data.frame()
str(pob_caba)
#Armo la poblacion para todo el pais excepto caba
pob_sin_caba <- pob_deptos %>%
filter(codprov!= 2) %>%
group_by(ano,codprov,coddep,nomdep,sexo,gredad) %>%
summarise(poblacion= sum(poblacion)) %>%
as.data.frame()
str(pob_sin_caba)
#Unifico todo
pob_deptos <- pob_caba %>%
bind_rows(pob_sin_caba)
#Armo una funcion para fixear los codigos
fix_cod <- function(x){
x <- ifelse(stringr::str_length(x)== 1,paste0('00',x),
ifelse(stringr::str_length(x)== 2,paste0('0',x),as.character(x)))
return(x)
}
str(pob_deptos)
#Fixeo coddep
pob_deptos <- pob_deptos %>%
mutate(coddep= fix_cod(coddep),
codprov= ifelse(codprov < 10,paste0('0',codprov),codprov))
#Uno los casos y la poblacion estimada
names(casos)
names(pob_deptos)
chagas <- pob_deptos %>%
filter(ano >= 2004 & ano <= 2018) %>%
left_join(ntd, by= c("ano","codprov"="provres","coddep"="depres","sexo","gredad"="edadquinq")) %>%
mutate(link= paste0(codprov,coddep)) %>%
fill(enf_desa_sub,.direction = "downup") %>%
fill(enf_desa_tot,.direction = "downup")
chagas_casos <- chagas %>%
filter(gredad != '18.Total')%>%
group_by(link,enf_desa_sub,sexo,gredad) %>%
summarise(casos=sum(casos),
poblacion=sum(poblacion)) %>%
mutate(order= as.numeric(substring(gredad,1,2))) %>%
arrange(link,sexo,order)
View(chagas)
library(tidyverse)
library(R.utils)
library(foreign)
library(sf)
library(epitools)
library(spdep)
load("datosMort/data.RData")
View(casos)
chagas <- casos %>%
filter(grepl("chagas",enf_desa_sub))
View(chagas)
pob_deptos <- loadObject("PoblacionesEstimadas/pobdeptos0125.Rbin")
#Armo la poblacion para todo CABA
pob_caba <- pob_deptos %>%
filter(codprov== 2) %>%
group_by(ano,codprov,sexo,gredad) %>%
summarise(poblacion= sum(poblacion))%>%
mutate(coddep= 000,
nomdep= 'Total CABA') %>%
as.data.frame()
str(pob_caba)
#Armo la poblacion para todo el pais excepto caba
pob_sin_caba <- pob_deptos %>%
filter(codprov!= 2) %>%
group_by(ano,codprov,coddep,nomdep,sexo,gredad) %>%
summarise(poblacion= sum(poblacion)) %>%
as.data.frame()
str(pob_sin_caba)
#Unifico todo
pob_deptos <- pob_caba %>%
bind_rows(pob_sin_caba)
#Armo una funcion para fixear los codigos
fix_cod <- function(x){
x <- ifelse(stringr::str_length(x)== 1,paste0('00',x),
ifelse(stringr::str_length(x)== 2,paste0('0',x),as.character(x)))
return(x)
}
str(pob_deptos)
#Fixeo coddep
pob_deptos <- pob_deptos %>%
mutate(coddep= fix_cod(coddep),
codprov= ifelse(codprov < 10,paste0('0',codprov),codprov))
#Uno los casos y la poblacion estimada
names(casos)
names(pob_deptos)
chagas <- pob_deptos %>%
filter(ano >= 2004 & ano <= 2018) %>%
left_join(ntd, by= c("ano","codprov"="provres","coddep"="depres","sexo","gredad"="edadquinq")) %>%
mutate(link= paste0(codprov,coddep)) %>%
fill(enf_desa_sub,.direction = "downup") %>%
fill(enf_desa_tot,.direction = "downup")
chagas <- pob_deptos %>%
filter(ano >= 2004 & ano <= 2018) %>%
left_join(chagas, by= c("ano","codprov"="provres","coddep"="depres","sexo","gredad"="edadquinq")) %>%
mutate(link= paste0(codprov,coddep)) %>%
fill(enf_desa_sub,.direction = "downup") %>%
fill(enf_desa_tot,.direction = "downup")
chagas[is.na(chagas)] <- 0
##%######################################################%##
#                                                          #
####                  Calculo las RME                   ####
#                                                          #
##%######################################################%##
#Standar de casos
std =chagas %>%
filter(gredad != '18.Total')%>%
group_by(enf_desa_sub,sexo,gredad) %>%
summarise(casos=sum(casos),
poblacion=sum(poblacion)) %>%
mutate(order= as.numeric(substring(gredad,1,2))) %>%
arrange(sexo,order)
#casos
chagas_casos <- chagas %>%
filter(gredad != '18.Total')%>%
group_by(link,enf_desa_sub,sexo,gredad) %>%
summarise(casos=sum(casos),
poblacion=sum(poblacion)) %>%
mutate(order= as.numeric(substring(gredad,1,2))) %>%
arrange(link,sexo,order)
length(unique(ntd$link))
chagas_casos
tasas_chagas <- list()
for(i in 1:1536){
for(j in 1:3){
tasas_chagas[[i]] <- ageadjust.indirect(count = chagas_casos[(1+17*(i-1)):(17+17*(i-1)),5],
pop= chagas_casos[(1+17*(i-1)):(17+17*(i-1)),6],
stdcount = std[(1+17*(j-1)):(17+17*(j-1)),4],
stdpop= std[(1+17*(j-1)):(17+17*(j-1)),5],
stdrate = std[(1+17*(j-1)):(17+17*(j-1)),4]/std[(1+17*(j-1)):(17+17*(j-1)),5])
}
print(i)
}
tasas_chagas_df <- as.data.frame(1:1536)
tasas_chagas_df$observados <- 0
tasas_chagas_df$esperados <- 0
tasas_chagas_df$RME <- 0
tasas_chagas_df$ic_inf <- 0
tasas_chagas_df$ic_sup <- 0
for(i in 1:1536){
tasas_chagas_df[i,]$observados <- tasas_chagas[[i]]$sir[1]
tasas_chagas_df[i,]$esperados <- tasas_chagas[[i]]$sir[2]
tasas_chagas_df[i,]$RME <- tasas_chagas[[i]]$sir[3]*100
tasas_chagas_df[i,]$ic_inf <- tasas_chagas[[i]]$sir[4]*100
tasas_chagas_df[i,]$ic_sup <- tasas_chagas[[i]]$sir[5]*100
print(i)
}
s <- unique(chagas_casos$sexo)
tasas_chagas_df$sexo <- rep(s,512)
l <- unique(chagas_casos$link)
tasas_chagas_df$link <- rep(l,each= 3)
tasas_chagas_df[,1] <- "Chagas"
colnames(tasas_chagas_df)[1] <- 'Evento'
View(tasas_chagas_df)
save(tasas_chagas_df,file="tasas/tasas_chagas.RData")
tasas_chagas_df <- tasas_chagas_df %>%
filter(!link %in% c(94028,94021))
matriz <- read.gal("matriz de vecindad/matriz")
sexo = unique(tasas_chagas_df$sexo)
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,9] <- EBlocal(tasas_chagas_df$observados[tasas_chagas_df$sexo== sexo],
tasas_chagas_df$esperados[tasas_chagas_df$sexo== sexo],
matriz)$est*100
print(sexo)
}
colnames(tasas_ntd_df)[9] <- 'suavizadas'
save(tasas_chagas_df,file="tasas/tasas_chagas_suav.RData")
library(tidyverse)
library(R.utils)
library(foreign)
library(sf)
library(epitools)
library(spdep)
library(leaflet)
load(file="tasas/tasas_chagas_suav.RData")
matriz <- read.gal("matriz de vecindad/matriz")
tasas_chagas_df[is.na(tasas_chagas_df)] <- 0
sexo = unique(tasas_chagas_df$sexo)
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,c(10:14)] <- cbind(attr(localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B")),"quadr"),
localmoran(tasas_ntd_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B"))[,c(1,5)]
)
print(sexo)
}
sexo = unique(tasas_chagas_df$sexo)
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,c(10:14)] <- cbind(attr(localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B")),"quadr"),
localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B"))[,c(1,5)]
)
print(sexo)
}
load(file="tasas/tasas_chagas_suav.RData")
tasas_chagas_df[is.na(tasas_chagas_df)] <- 0
sexo = unique(tasas_chagas_df$sexo)
sexo
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,c(10:14)] <- cbind(attr(localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B")),"quadr"),
localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B"))[,c(1,5)]
)
print(sexo)
}
View(tasas_chagas_df)
matriz <- read.gal("matriz de vecindad/matriz")
tasas_chagas_df[is.na(tasas_chagas_df)] <- 0
sexo = unique(tasas_chagas_df$sexo)
load("tasas/tasas_chagas.RData")
tasas_chagas_df <- tasas_chagas_df %>%
filter(!link %in% c(94028,94021))
#Cargo la matriz de vecindad
matriz <- read.gal("matriz de vecindad/matriz")
#Suavizo las tasas
sexo = unique(tasas_chagas_df$sexo)
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,9] <- EBlocal(tasas_chagas_df$observados[tasas_chagas_df$sexo== sexo],
tasas_chagas_df$esperados[tasas_chagas_df$sexo== sexo],
matriz)$est*100
print(sexo)
}
colnames(tasas_chagas_df)[9] <- 'suavizadas'
#Guardo las tasas
save(tasas_chagas_df,file="tasas/tasas_chagas_suav.RData")
library(tidyverse)
library(R.utils)
library(foreign)
library(sf)
library(epitools)
library(spdep)
library(leaflet)
load(file="tasas/tasas_chagas_suav.RData")
##%######################################################%##
#                                                          #
####                Estimo la I de Moran                ####
#                                                          #
##%######################################################%##
#Cargo la matriz de vecindad
matriz <- read.gal("matriz de vecindad/matriz")
tasas_chagas_df[is.na(tasas_chagas_df)] <- 0
sexo = unique(tasas_chagas_df$sexo)
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,c(10:14)] <- cbind(attr(localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B")),"quadr"),
localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B"))[,c(1,5)]
)
print(sexo)
}
#Armo los cluster
tasas_ntd_df <- tasas_ntd_df %>%
mutate(cluster= case_when(`Pr(z != E(Ii))` > 0.05 ~ 'no significativo',
TRUE ~ mean))
deptos$suavizadas_agrup <- cut(deptos$suavizadas,quantile(deptos$suavizadas,probs= c(0,0.2,0.4,0.6,0.8,1)),
dig.lab = 4)
library(tidyverse)
library(R.utils)
library(foreign)
library(sf)
library(epitools)
library(spdep)
library(leaflet)
load(file="tasas/tasas_chagas_suav.RData")
##%######################################################%##
#                                                          #
####                Estimo la I de Moran                ####
#                                                          #
##%######################################################%##
#Cargo la matriz de vecindad
matriz <- read.gal("matriz de vecindad/matriz")
tasas_chagas_df[is.na(tasas_chagas_df)] <- 0
sexo = unique(tasas_chagas_df$sexo)
for(sexo in sexo){
tasas_chagas_df[tasas_chagas_df$sexo== sexo,c(10:14)] <- cbind(attr(localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B")),"quadr"),
localmoran(tasas_chagas_df$suavizadas[tasas_chagas_df$sexo== sexo[1]],nb2listw(matriz,style = "B"))[,c(1,5)]
)
print(sexo)
}
#Armo los cluster
tasas_ntd_df <- tasas_ntd_df %>%
mutate(cluster= case_when(`Pr(z != E(Ii))` > 0.05 ~ 'no significativo',
TRUE ~ mean))
tasas_chagas_df <- tasas_chagas_df %>%
mutate(cluster= case_when(`Pr(z != E(Ii))` > 0.05 ~ 'no significativo',
TRUE ~ mean))
#Cargo la cartografia de los departamentos
deptos <- st_read(dsn= "cartografia/deptos",
layer = "pxdptodatosok")
#Arreglo las geometrias
deptos <- st_make_valid(deptos)
#Cargo la cartografia de las provincias
pcias <- st_read(dsn= "cartografia/provincias",
layer = "pxpciadatosok")
#Arreglo las geometrias
pcias <- st_make_valid(pcias)
#Selecciono caba como provincia
caba <- pcias %>% filter(link == '02')
#Excluyo antartida y caba
deptos <- deptos %>% filter(!link %in% c(94028,94021) & codpcia != '02')
#Uno los departamentos y caba
deptos <- deptos %>%
bind_rows(caba)
#Arreglo los datos
deptos <- deptos %>%
mutate(link= case_when(link== '02' ~ '02000', TRUE ~ link),
codpcia= case_when(link== '02000' ~ '02',TRUE ~ codpcia),
departamen= case_when(link== '02000' ~ 'CABA',TRUE ~ departamen))
#Agrego los datos de ambos sexos
deptos <- deptos %>%
left_join(tasas_chagas_df %>% filter(grepl("3.",sexo)) %>% select(link,RME,suavizadas,mean,cluster))
#Calculo los quintiles
deptos$suavizadas_agrup <- cut(deptos$suavizadas,quantile(deptos$suavizadas,probs= c(0,0.2,0.4,0.6,0.8,1)),
dig.lab = 4)
labeler <- function(labels){
#Guardo el nivel
levels <- levels(labels)
#Edito el nivel
levels <- stringr::str_remove(string = levels, fixed("("))
levels <- stringr::str_remove(string = levels, fixed("]"))
levels <- stringr::str_remove(string = levels, fixed("["))
levels <- stringr::str_replace(string = levels,pattern = ",",replacement = "-")
#Edito las etiquetas
labels <- stringr::str_remove(string = labels, fixed("("))
labels <- stringr::str_remove(string = labels, fixed("]"))
labels <- stringr::str_remove(string = labels, fixed("["))
labels <- stringr::str_replace(string = labels,pattern = ",",replacement = "-")
return(levels(factor(labels,levels = levels)))
}
colores_personalizados <- colorFactor(
palette = c("red", "blue", "lightpink", "skyblue2", "white"),
domain = c("High-High", "Low-Low", "High-Low", "Low-High", "no significativo")
)
mapa_chagas <-leaflet(deptos) %>%
addTiles(urlTemplate = "https://wms.ign.gob.ar/geoserver/gwc/service/tms/1.0.0/capabaseargenmap@EPSG%3A3857@png/{z}/{x}/{-y}.png",
tileOptions(tms = TRUE,maxZoom = 14),attribution = '<a target="_blank" href="https://www.ign.gob.ar/argenmap/argenmap.jquery/docs/#datosvectoriales" style="color: black; text-decoration: underline; font-weight: normal;">Datos IGN Argentina // OpenStreetMap</a>') %>%
addPolygons(fill = colores_personalizados(deptos$mean),
fillColor = colores_personalizados(deptos$mean),
fillOpacity = 0.7,
stroke = TRUE,
weight = 1,
color = "grey",
popup = paste0(deptos$departamen,"\n",deptos$mean),
group= "Cluster") %>%
addLegend(position = "bottomright", # Posición de la leyenda
colors = c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low", "Low-High", "no significativo"),
title = "Cluster",
group = "Cluster")
pal <- RColorBrewer::brewer.pal(5,"Blues")
mapa_chagas <- mapa_chagas %>%
addPolygons(fill= deptos$suavizadas_agrup,
color= pal,
fillOpacity = 0.7,
stroke = FALSE,
weight = 1,
popup = paste0(deptos$departamen,"\n",deptos$suavizadas),
group= "Suavizadas") %>%
addLegend(position = "bottomright", # Posición de la leyenda
colors = pal,
labels = labeler(deptos$suavizadas_agrup),
title = "RME suavizadas",
group = "Suavizadas")
mapa_chagas <- mapa_chagas %>%
addPolygons(fill = colores_personalizados(deptos$cluster),
fillColor = colores_personalizados(deptos$cluster),
fillOpacity = 0.7,
stroke = TRUE,
weight = 1,
color = "grey",
popup = paste0(deptos$departamen,"\n",deptos$cluster),
group= "Cluster Test") %>%
addLegend(position = "bottomright", # Posición de la leyenda
colors = c("red", "blue", "lightpink", "skyblue2", "white"),
labels = c("High-High", "Low-Low", "High-Low", "Low-High", "no significativo"),
title = "Cluster Test",
group = "Cluster Test")
mapa_chagas %>%
addLayersControl(
overlayGroups = c("Suavizadas","Cluster","Cluster Test"),
position = "bottomleft",
options = layersControlOptions(collapsed = F)
)
